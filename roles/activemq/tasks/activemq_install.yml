---
- name: Determine latest activemq build for given version.
  script: activemq_find_latest_version.py
  register: acitvemq_download_link

- name: Register activemq's name.
  set_fact: activemq_name="{{ acitvemq_download_link.stdout.strip().split('/')[-1].split('.tar.gz')[0].split('-bin')[0] }}"

- name: Create directory for activemq stuff.
  file:
    path: "{{ root_dir }}/{{ activemq_name }}/logs" 
    state: directory
    owner: "{{ activemq_user }}"
    group: "{{ activemq_user }}"
    mode: 0755

- name: Check if activemq is already installed.
  stat:
    path: "{{ root_dir }}/{{ activemq_name }}"
  register: activemq_dir

- name: Download activemq_distro.
  get_url:
    url: "{{ acitvemq_download_link.stdout }}"
    dest: "/tmp/{{ acitvemq_download_link.stdout.strip().split('/')[-1] }}"
    mode: 0440
  when: activemq_dir.stat.isdir is not defined
        
- name: Untar activemq. 
  unarchive:
    src: "/tmp/{{ acitvemq_download_link.stdout.strip().split('/')[-1] }}"
    dest: "{{ root_dir }}"
    remote_src: True
    owner: "{{ activemq_user }}"
    group: "{{ activemq_user }}"
    mode: 0755

- name: Create systemd file for activemq.
  template:
    src: activemq.service.j2
    dest: "/etc/systemd/system/activemq.service"
    owner: root
    group: root
    force: yes
    mode: 0644
  when: ansible_service_mgr == 'systemd'

- name: Add firewall exception for manager interface. If firewall is on.
  firewalld: 
    port: 8161/tcp
    permanent: true 
    state: enabled 
    immediate: yes
  ignore_errors: yes
    
- name: Start and enable activemq for systemd.
  systemd:
    state: started
    name: activemq
    daemon_reload: yes
    enabled: yes
  when: ansible_service_mgr == 'systemd'
