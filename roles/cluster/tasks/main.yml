- name: Ensure cluster group membership
  fail: msg="Cluster hosts must be members of a group"
  when: pacemaker_ansible_group is not iterable

- name: Installing packages
  yum: name={{ item }}
  with_items:
      - pacemaker
      #- resource-agents
      - pcs
      #- fence-agents-all
      #- fence-agents-virsh 

#todo keep selinux(?) and firewall online
- name: disable selinux
  selinux: policy=targeted state=disabled

- name: ensure firewalld is disabled and stopped
  service: name=firewalld enabled=no state=stopped

- name: ensure corosync and pacemaker is disabled and stopped
  service: name=corosync enabled=no state=stopped
  
- name: ensure pacemaker is disabled and stopped
  service: name=pacemaker enabled=no state=stopped

- name: Ensure the password for the cluster user
  user:
    name={{ pacemaker_user }}
    password={{ pacemaker_password | password_hash('sha512', ansible_hostname) }}

- name: ensure pcsd enabled and started
  service: name=pcsd enabled=yes state=started

- name: Authenticate all nodes
  command: >
    pcs cluster auth
    {% for host in groups[pacemaker_ansible_group] %}
    {{ hostvars[host]['ansible_hostname'] }}
    {% endfor %}
    -u {{ pacemaker_user }} -p {{ pacemaker_password }}
  run_once: true
  args:
    creates: /var/lib/pcsd/tokens

- name: Setup cluster message bus
  run_once: true
  command: >
    pcs cluster setup --name {{ pacemaker_cluster_name }}
    {% for host in groups[pacemaker_ansible_group] %}
    {{ hostvars[host]['ansible_hostname'] }}
    {% endfor %}
  args:
    creates: /etc/corosync/corosync.conf
